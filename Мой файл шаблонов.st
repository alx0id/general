{1,
{6,
{"Мой",1,0,"",""},
{5,
{"Frequently used",1,0,"",""},
{4,
{"Взаиморасчеты",1,0,"",""},
{0,
{"ДоговорКонтрагента",0,0,"дог","ДоговорКонтрагента"}
},
{0,
{"Контрагент",0,0,"кон","Контрагент"}
},
{0,
{"Организация",0,0,"орг","Организация"}
},
{0,
{"Физлицо",0,0,"фл","Физлицо"}
}
},
{3,
{"Даты",1,0,"",""},
{0,
{"Начальная дата",0,0,"НачДата","'00010101000000'"}
},
{0,
{"ПараметрыПериода(Стандартный период)",0,0,"датанач","Запрос.УстановитьПараметр(""ДатаНач"", Период.ДатаНачала);
Запрос.УстановитьПараметр(""ДатаКон"", Период.ДатаОкончания);"}
},
{0,
{"ПараметрыПериода(Даты)",0,0,"датанач","Запрос.УстановитьПараметр(""ДатаНач"", ДатаНач);
Запрос.УстановитьПараметр(""ДатаКон"", ДатаКон);
"}
}
},
{5,
{"Единицы измерения",1,0,"",""},
{0,
{"БазоваяЕдиницаИзмерения",0,0,"БазЕд","БазоваяЕдиницаИзмерения"}
},
{0,
{"Единица измерения",0,0,"едизм","ЕдиницаИзмерения"}
},
{0,
{"ЕдиницаИзмеренияМест",0,0,"ЕдМест","ЕдиницаИзмеренияМест"}
},
{0,
{"ЕдиницаХраненияОстатков",0,0,"ЕдХр","ЕдиницаХраненияОстатков"}
},
{0,
{"ЕдиницаДляОтчетов",0,0,"ЕдОтч","ЕдиницаДляОтчетов"}
}
},
{4,
{"Производство",1,0,"",""},
{0,
{"ПроизводственноеПодразделение",0,0,"пп","ПроизводственноеПодразделение"}
},
{0,
{"ЗаказНаПроизводство",0,0,"знп","ЗаказНаПроизводство"}
},
{0,
{"РабочийЦентр",0,0,"раб","РабочийЦентр"}
},
{0,
{"Подразделение",0,0,"подр","Подразделение"}
}
},
{5,
{"Товары",1,0,"",""},
{0,
{"Номенклатура",0,0,"ном","Номенклатура"}
},
{0,
{"ХарактеристикаНоменклатуры",0,0,"Хар","ХарактеристикаНоменклатуры"}
},
{0,
{"СерияНоменклатуры",0,0,"Сер","СерияНоменклатуры"}
},
{0,
{"Заказ",0,0,"Заказ","УправлениеПроизводством.ПолучитьЗаказНаПереработку(Дата, Подразделение, ПодразделениеОрганизации, ВидНоменклатуры, СтатьяЗатрат)"}
},
{0,
{"Спецификация",0,0,"Спе","Спецификация"}
}
}
},
{10,
{"Блоки кода",1,0,"",""},
{3,
{"С++",1,0,"",""},
{0,
{"++",0,0,"++","<?""Инкрементируемая переменная""> = <?""Инкрементируемая переменная""> + 1;<?>"}
},
{0,
{"+=",0,0,"+=","<?""Инкрементируемая переменная""> = <?""Инкрементируемая переменная""> + <?""Инкремент"">;<?>"}
},
{0,
{"Инкремент",0,0,"Инк","Сч = Сч + 1;"}
}
},
{3,
{"Запросы",1,0,"",""},
{0,
{"ВЫБОР (иначе)",0,0,"ВЫБОР","ВЫБОР 
	КОГДА <?> ТОГДА 
	
	ИНАЧЕ  
	
КОНЕЦ"}
},
{0,
{"ЕСТЬNULL",0,0,"нул","ЕСТЬNULL(<?>, )"}
},
{0,
{"Запр",0,0,"Запр","Запрос = Новый Запрос;
Запрос.Текст = ""<?"""", ТекстЗапроса>"";
Запрос.УстановитьПараметр(""<?>"", );
// Запрос.УстановитьПараметр(""ДатаНач"", Период.ДатаНачала);
// Запрос.УстановитьПараметр(""ДатаКон"", Период.ДатаОкончания);
// Запрос.УстановитьПараметр(""Организация"", Организация);
// Запрос.УстановитьПараметр(""Склад"", Склад);
// Запрос.УстановитьПараметр(""ВидНоменклатуры"", ВидНоменклатуры);
Таблица = Запрос.Выполнить().Выгрузить();"}
}
},
{6,
{"Препроцессорные скобки",1,0,"",""},
{0,
{"Внешнеенах",0,0,"Внешнеенах","#Если ВнешнееСоединение Тогда
<?>#КонецЕсли"}
},
{0,
{"Клиентнах",0,0,"клиентнах","#Если Клиент Тогда
<?>#КонецЕсли"}
},
{0,
{"НаКлиенте",0,0,"клт","&НаКлиенте"}
},
{0,
{"НаСервере",0,0,"срв","&НаСервере"}
},
{0,
{"Область кода",0,0,"о","#Область <?""Имя области"">
<?>
#КонецОбласти
"}
},
{0,
{"Сервернах",0,0,"Сервернах","#Если Сервер Тогда
<?>#КонецЕсли"}
}
},
{3,
{"Процедуры/функции",1,0,"",""},
{0,
{"_Процедура модуля формы без шапки",0,0,"проц","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Процедура <?""Имя процедуры"">()

	<?>

КонецПроцедуры // <?""Имя процедуры"">()
"}
},
{0,
{"_Функция модуля формы без шапки",0,0,"функ","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Функция <?""Имя функции"">()

	<?>

КонецФункции // <?""Имя функции"">()
"}
},
{0,
{"Процедура экспорт",0,0,"Проц","Процедура <?""Имя процедуры"">() Экспорт

	<?>

КонецПроцедуры
		"}
}
},
{20,
{"Сокращения",1,0,"",""},
{0,
{"ВидКонтейнера",0,0,"видк","ВидКонтейнера"}
},
{0,
{"Дополнить таблицу",0,0,"доп","ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(<?""Источник"">, <?""Приемник"">);"}
},
{0,
{"ЗаполнитьЗначенияСвойств",0,0,"зап","ЗаполнитьЗначенияСвойств(<?""Приемник:"">, <?""Источник:"">);"}
},
{0,
{"Количество()",0,0,"кол","Количество()"}
},
{0,
{"Количество() > 0",0,0,"кол","Количество() > 0"}
},
{0,
{"КонецЕсли",0,0,"ке","КонецЕсли;"}
},
{0,
{"КонецЦикла",0,0,"кц","КонецЦикла;"}
},
{0,
{"Краткое условие",0,0,"е","?(<?>, , )"}
},
{0,
{"НСтроки (условие)",0,0,"НСтроки","НСтроки.НайтиСтроки(Новый Структура(""<?>"", ));

Если НСтроки.Количество() > 0 Тогда

	

КонецЕсли;"}
},
{0,
{"НСтроки (цикл)",0,0,"НСтроки","НСтроки.НайтиСтроки(Новый Структура(""<?>"", ));

Для каждого НСтрока Из НСтроки Цикл
	
		
	
КонецЦикла;
"}
},
{0,
{"СтатусОченьВажное",0,0,"ОчВажн","СтатусСообщения.ОченьВажное"}
},
{0,
{"БЮ",0,0,"БЮ","<>"}
},
{0,
{"Для (сч, колво)",0,0,"для","Для Сч = 1 По Колво Цикл

	<?>

КонецЦикла;
"}
},
{0,
{"Пока (Выборка.След..)",0,0,"","Пока Выборка.Следующий() Цикл

	<?>

КонецЦикла;
"}
},
{0,
{"Экспорт",0,0,"э","Экспорт"}
},
{0,
{"Сообщить со звездочками",0,0,"Сообщ","Сообщить(""********* "" + ""<?""Введите текст сообщения"">"" + "" *********"");"}
},
{0,
{"Регистратор",0,0,"рег","Регистратор"}
},
{0,
{"Туду",0,0,"тд","// TODO
"}
},
{0,
{"НаСервере",0,0,"с","&НаСервере"}
},
{0,
{"НаКлиенте",0,0,"к","&НаКлиенте"}
}
},
{3,
{"Состояние",1,0,"",""},
{0,
{"Инициализация состояния",0,0,"СостИни","Сч = 0;
Колво = <?>.Количество();"}
},
{0,
{"Состояние%",0,0,"сост","Если Сч%100 = 0 Тогда

	Состояние("""" + Сч + ""/"" + Колво);

КонецЕсли;
"}
},
{0,
{"СостояниеСч",0,0,"сост","Состояние("""" + Сч + ""/"" + Колво);"}
}
},
{3,
{"Стандартизация функций",1,0,"",""},
{0,
{"Сообщения в результате функции",0,0,"Сообщ","Рез.Сообщения = Рез.Сообщения + ""<?""Введите сообщение"">"" + Символы.ПС;"}
},
{0,
{"Рез",0,0,"Рез","Рез = Новый Структура(""Результат, БылиОшибки, Сообщения"", Неопределено, Ложь, """");"}
},
{0,
{"БылиОшибки",0,0,"ош","Рез.БылиОшибки = Истина;
Рез.Сообщения = Рез.Сообщения + СтруктураВозврата.Ошибки + Символы.ПС;
"}
}
},
{3,
{"Табдок",1,0,"",""},
{0,
{"Область",0,0,"Обл","Обл<?""Название области""> = Макет.ПолучитьОбласть(""<?""Название области"">"");"}
},
{0,
{"Присоединить",0,0,"прис","ТабДок.Присоединить(<?>);"}
},
{0,
{"Вывести",0,0,"выв","ТабДок.Вывести(<?>);"}
}
},
{2,
{"Транзакции",1,0,"",""},
{0,
{"ФТранзакцииНах",0,0,"фтранзакциинах","НачатьТранзакцию();
Попытка
	
	<?>
	ОбработкаПрерыванияПользователя();
	ЗафиксироватьТранзакцию();
	
Исключение
	
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();
	
КонецПопытки;
"}
},
{0,
{"ОбработкаПрерыванияПользователя",0,0,"Прер","ОбработкаПрерыванияПользователя();"}
}
},
{4,
{"Форма",1,0,"",""},
{0,
{"текДанные",0,0,"текДанные","текДанные = Элементы.<?""Выберите табличное поле:"">.ТекущиеДанные;
Если текДанные = Неопределено Тогда

	Возврат;

КонецЕсли;
<?>"}
},
{0,
{"Форма",0,0,"Форма","ПараметрыФормы = Новый Структура(""Ключ"", );
ОткрытьФорму("", ПараметрыФормы);
"}
},
{0,
{"РеквизитОбъект",0,0,"рекв","РеквизитФормыВЗначение(""Объект"")"}
},
{0,
{"Объект.",0,0,"об","Объект."}
}
}
},
{9,
{"Каменты",1,0,"",""},
{0,
{"Штамп",0,0,"БИТ","// НАЧАЛО БИТ.Обухов. <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">. Задача №<?""Введите номер задачи:"">.<?>
// КОНЕЦ  БИТ.Обухов. <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">."}
},
{0,
{"Штамп (анон)",0,0,"анон","// НАЧАЛО  <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">. <?>
// КОНЕЦ   <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">."}
},
{0,
{"Штамп на однострочный камент",0,0,"бит1","// БИТ.Обухов. <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">. Задача №<?>.
//"}
},
{0,
{"Штамп на однострочный камент (анон)",0,0,"анон1","// <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">.
//"}
},
{0,
{"ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ",0,0,"рз","////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
"}
},
{0,
{"Процедура-обработчик",0,0,"ПОбр","// Процедура-обработчик события ""<?""Событие"">"" <?""Какого элемента формы"">.
//"}
},
{0,
{"Процедура-обработчик ПриОткрытии",0,0,"ПОбр","// Процедура-обработчик события ""ПриОткрытии"" формы.
//"}
},
{0,
{"Процедура-нажатие",0,0,"пнаж","// Процедура вызывается при нажатии кнопки ""<?""Кнопка"">"" <?>
// "}
},
{0,
{"Об",0,0,"Об","// НАЧАЛО Обухов. <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">. <?""Введите комментарий:"">.<?>
// КОНЕЦ  Обухов. <?"""", ДатаВремя, ""ДФ=dd.MM.yy"">."}
}
},
{13,
{"Операции с типами",1,0,"",""},
{0,
{"Null",0,0,"нул","Null"}
},
{0,
{"Документ",0,0,"док","Документы.<?"""", Документ>"}
},
{0,
{"ДокументСсылка",0,0,"доксс","ДокументСсылка"}
},
{0,
{"ЗначениеЗаполнено",0,0,"зз","ЗначениеЗаполнено(<?>)"}
},
{0,
{"ЗнНе",0,0,"ЗнНе","НЕ ЗначениеЗаполнено(<?>)"}
},
{0,
{"Неопределено",0,0,"нео","Неопределено"}
},
{0,
{"НТабДок",0,0,"Нтд","ТабДок = Новый ТабличныйДокумент;
"}
},
{0,
{"НСтр",0,0,"Нс","Новый Структура(""<?>"", )"}
},
{0,
{"Перечисление",0,0,"пер","Перечисления.<?"""", ЗначениеПеречисления>"}
},
{0,
{"Пустая ссылка",0,0,"пус","Справочники.<?"""", Справочник>.ПустаяСсылка()"}
},
{0,
{"СправочникСсылка",0,0,"спрсс","СправочникСсылка"}
},
{0,
{"тз",0,0,"тз","ТипЗнч(<?""Выражение для проверки типа"">) = Тип(<?>)"}
},
{0,
{"Тзн (ТаблицаЗначений)",0,0,"тзн","ТаблицаЗначений"}
}
},
{9,
{"Рабочие",1,0,"",""},
{0,
{"ДобавлениеУзлаXML",0,0,"Узел","Файл.ЗаписатьНачалоЭлемента(""<?""Узел"">"");
	Файл.ЗаписатьТекст(<?""Текст"">);
Файл.ЗаписатьКонецЭлемента();
"}
},
{0,
{"Записать объект перед выполнением операции",0,0,"зап","Если ЭтоНовый() Тогда

	Если Вопрос(""Для выполнения операции необходимо записать объект. Записать?"", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	
		Записать();
	
	Иначе
	
		Возврат;
	
	КонецЕсли;

КонецЕсли;
"}
},
{0,
{"Печать во внешней печатной форме/отчете",0,0,"печ","Функция Печать() Экспорт

	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет(""ОсновнойМакет"");
	ОблЗаголовок = Макет.ПолучитьОбласть(""Заголовок"");
	ОблШапка = Макет.ПолучитьОбласть(""Шапка"");
	ОблСтрока = Макет.ПолучитьОбласть(""Строка"");
	ОблПодвал = Макет.ПолучитьОбласть(""Подвал"");
	Возврат ТабДок;

КонецФункции // Печать()"}
},
{0,
{"Проверка табличной части на заполненность",0,0,"тч","Если <?""Имя табличной части"">.Количество() > 0 Тогда

	Если Вопрос(""В табличной части """"<?""Имя табличной части"">"""" уже имеются элементы. При заполнении они будут удалены. Заполнить?"", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда

		<?""Имя табличной части"">.Очистить();
		
	Иначе
		
		Возврат;

	КонецЕсли;	

КонецЕсли;
"}
},
{0,
{"Распределялка",0,0,"распр","МассивБаз = <?""Таблица с коэффициентами"">.ВыгрузитьКолонку(""<?""Колонка коэффициентов"">"");
МассивРаспр = ОбщегоНазначения.РаспределитьПропорционально(<?""Переменная с распределяемой суммой"">, МассивБаз, 2);

Колво = <?""Таблица с коэффициентами"">.Количество();
Для Сч =1 По Колво Цикл

	СтрокаТ.<?""Колонка распределено""> = МассивРаспр[Сч];	

КонецЦикла;
"}
},
{0,
{"СписокВыбора",0,0,"Список","СписокЗначений = Новый СписокЗначений;
Таб = ???;
НСтроки = Таб.НайтиСтроки(Новый Структура(""???"", ТекущаяСтрока.???));
ТекЭлемент = Таб.Индекс(НСтроки[0]);
СписокЗначений.ЗагрузитьЗначения(Таб.ВыгрузитьКолонку(???));
Возвр = ВыбратьИзСписка(СписокЗначений, Элемент, СписокЗначений[ТекЭлемент]);
Если Возвр <> Неопределено И Возвр.Значение <> ТекущаяСтрока.??? Тогда
		
	<?>
	
КонецЕсли;
"}
},
{0,
{"Точно?",0,0,"точно","Если Вопрос(""Точно?"", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда

	Возврат;

КонецЕсли;
"}
},
{0,
{"НайтиИСоздать (не создавать новые)",0,0,"найти","// Поиск в <?""ТипОбъекта"">: <?""Вид объекта"">
СтруктураПоиска = Новый Структура(""<?""Поля поиска"">"", <?""Значения полей поиска"">);

СтруктураВозврата = НайтиИСоздатьОбъект(""<?""ТипОбъекта"">"", ""<?""Вид объекта"">"", СтруктураПоиска, , Ложь, Ложь);

Если СтруктураВозврата.Ошибки = """" Тогда
	
	<?""Переменная-результат""> = СтруктураВозврата.Результат;
	
Иначе
	
	Сообщить(СтруктураВозврата.Ошибки);
	//Рез.БылиОшибки = Истина;
	//Рез.Сообщения = Рез.Сообщения + СтруктураВозврата.Ошибки + Символы.ПС;
	
КонецЕсли;
"}
},
{0,
{"НайтиИСоздать (создавать новые)",0,0,"найти","// Поиск в <?""ТипОбъекта"">: <?""Вид объекта"">
СтруктураПоиска = Новый Структура(""<?""Поля поиска"">"", <?""Значения полей поиска"">);

//СтруктураДопПараметров = Новый Структура;           
//СтруктураДопПараметров.Вставить("""", );

СтруктураВозврата = НайтиИСоздатьОбъект(""<?""ТипОбъекта"">"", ""<?""Вид объекта"">"", СтруктураПоиска, , Истина, Ложь);

Если СтруктураВозврата.Ошибки = """" Тогда
	
	<?""Переменная-результат""> = СтруктураВозврата.Результат;
	
Иначе
	
	Сообщить(СтруктураВозврата.Ошибки);
	
КонецЕсли;
"}
}
},
{3,
{"Техно",1,0,"",""},
{2,
{"УФ",1,0,"",""},
{0,
{"Форма списка УФ",0,0,"уф","// БИТ.Обухов. <?"""", ДатаВремя, ""ДФ=dd-MM-yyyy"">. ВЗ №?????????.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОткрытьФормуОбъекта(Неопределено, ""<?"""", ВыборТипа>"", ""ФормаСписка"", Отказ, ВладелецФормы, , , ""ФормаСпискаУправляемая"");
	Если Отказ Тогда
	
		Возврат;
	
	КонецЕсли;
		
КонецПроцедуры
"}
},
{0,
{"Форма выбора УФ",0,0,"уф","// БИТ.Обухов. <?"""", ДатаВремя, ""ДФ=dd-MM-yyyy"">. ВЗ №?????????.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОткрытьФормуОбъекта(Неопределено, ""<?"""", ВыборТипа>"", ""ФормаВыбора"", Отказ, ВладелецФормы, , , , ""ФормаВыбораУправляемая"");
	Если Отказ Тогда
	
		Возврат;
	
	КонецЕсли;
		
КонецПроцедуры
"}
}
},
{0,
{"Текущее ВЗ1",0,0,"1","// БИТ.Обухов. 10.10.16. Задача №000022230.
//"}
},
{0,
{"ВЗ2",0,0,"2","// НАЧАЛО БИТ.Обухов. 10.10.16. Задача №000022230.
// КОНЕЦ  БИТ.Обухов. 10.10.16."}
}
}
}
}